#summary Guide on how to deploy XIDE on a server.
#labels Phase-Deploy

= Introduction =

This is a guide on how to assemble a WAR-file from XIDE source code. The created WAR-file can then be easily deployed to Tomcat.

<h1>Preparation</h1>

<h2>Tomcat 6</h2>

1. Add the xformsdb.jar file in Tomcat's CATALINA_HOME/lib folder. The XFormsDB project can be found in http://code.google.com/p/xformsdb/.

2. Create a directory somewhere in the server where you would like to store all XIDE applications and templates. Make sure that Tomcat has read and write permissions for this directory.

3. Copy the files and folders from http://xformsdb-ide.googlecode.com/svn/trunk/xidefiles to the directory created in step 2 (don't include the "xidefiles" folder).

<h2>Exist-db</h2>

1. In Exist-db, create a user for XIDE (e.g. username: "xide" password:"xxx").

2. Create the following three collections:

/db/xide/

/db/xide/published

/db/xide/temp

Make sure that the user you created in step 1 has permissions to read and write to the newly created collections.

<h2>Deployment</h2>

1. Update the "war/WEB-INF/constants.properties" file to match your server environment. The file contains comments for each attribute so you are able to fill them. It is very important to go through ALL the attributes under

###########################################################################

ENVIRONMENT SPECIFIC!! PLEASE CHANGE THESE

###########################################################################

2. Update the MySQL properties in "war/META-INF/context.xml" as suggested in "war/WEB-INF/constants.properties". 

Note: you only need to modify the "Resource" element to match your server environment.

3. Make sure you have the correct properties in "build.properties" file and then run the Ant script "war". The .war file will be created under the path specified in "build.properties".

4. Deploy the .war file to Tomcat.

<h2>Server Requirements:</h2>

- Apache Tomcat 6.x

- eXist-db Open Source Native XML Database 1.4 or later

- XFormsDB